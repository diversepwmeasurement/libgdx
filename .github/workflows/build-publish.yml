jobs:
  build-and-upload-runnables:
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_EC2_METADATA_DISABLED: true
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    needs: pack-natives
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: '17'
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    - continue-on-error: true
      name: Build Runnables
      run: './gradlew clean fetchNatives

        ./gradlew buildRunnables build

        '
    - continue-on-error: true
      if: env.AWS_ACCESS_KEY_ID != null
      name: Upload artifacts to S3
      run: 'aws s3 cp ./extensions/gdx-tools/build/libs/ s3://libgdx-nightlies/libgdx-runnables/
        --recursive

        aws s3 cp ./extensions/gdx-setup/build/libs/ s3://libgdx-nightlies/libgdx-runnables/
        --recursive

        '
  natives-android:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: '17'
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    - continue-on-error: true
      name: Download NDK
      run: 'wget https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
        -O android-ndk.zip

        echo "769ee342ea75f80619d985c2da990c48b3d8eaf45f48783a2d48870d04b46108  android-ndk.zip"
        | sha256sum --check

        unzip android-ndk.zip

        echo "NDK_HOME=$(pwd)/android-ndk-r25c" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: Build Android natives
      run: './gradlew jniGen jnigenBuildAndroid

        '
    - continue-on-error: true
      name: Pack artifacts
      run: 'find .  -name "*.a" -o -name "*.dll" -o -name "*.dylib" -o -name "*.so"
        | grep "libs" > native-files-list

        zip natives-android -@ < native-files-list

        '
    - continue-on-error: true
      name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: natives-android.zip
        path: natives-android.zip
  natives-ios:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: '17'
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    - continue-on-error: true
      name: Build macOS natives
      run: '# See https://github.com/actions/virtual-environments/issues/2557

        sudo mv /Library/Developer/CommandLineTools/SDKs/* /tmp

        sudo mv /Applications/Xcode.app /Applications/Xcode.app.bak

        sudo mv /Applications/Xcode_14.3.1.app /Applications/Xcode.app

        sudo xcode-select -switch /Applications/Xcode.app

        /usr/bin/xcodebuild -version

        ./gradlew jniGen jnigenBuildIOS

        ./backends/gdx-backend-robovm/build-objectal.sh

        '
    - continue-on-error: true
      name: Pack artifacts
      run: 'find .  -name "*.a" -o -name "*.dll" -o -name "*.dylib" -o -name "*.so"
        -o -name "*.xcframework"  | grep "libs" > native-files-list

        zip -r natives-ios -@ < native-files-list

        '
    - continue-on-error: true
      name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: natives-ios.zip
        path: natives-ios.zip
  natives-linux:
    container:
      image: ubuntu:18.04
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Install dependencies into minimal dockerfile
      run: '# ubuntu dockerfile is very minimal (only 122 packages are installed)

        # need to install updated git (from official git ppa)

        apt update

        apt install -y software-properties-common

        add-apt-repository ppa:git-core/ppa -y

        # install dependencies expected by other steps

        apt update

        apt install -y git \

        curl \

        ca-certificates \

        wget \

        bzip2 \

        zip \

        unzip \

        xz-utils \

        maven \

        ant sudo locales


        # set Locale to en_US.UTF-8 (avoids hang during compilation)

        locale-gen en_US.UTF-8

        echo "LANG=en_US.UTF-8" >> $GITHUB_ENV

        echo "LANGUAGE=en_US.UTF-8" >> $GITHUB_ENV

        echo "LC_ALL=en_US.UTF-8" >> $GITHUB_ENV

        '
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: '17'
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    - continue-on-error: true
      name: Install cross-compilation toolchains
      run: 'sudo apt update

        sudo apt install -y --force-yes gcc g++

        sudo apt install -y --force-yes gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
        libc6-dev-arm64-cross

        sudo apt install -y --force-yes gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf
        libc6-dev-armhf-cross

        '
    - continue-on-error: true
      name: Build Linux natives
      run: './gradlew jniGen jnigenBuildLinux64 jnigenBuildLinuxARM jnigenBuildLinuxARM64

        '
    - continue-on-error: true
      name: Pack artifacts
      run: 'find .  -name "*.a" -o -name "*.dll" -o -name "*.dylib" -o -name "*.so"
        | grep "libs" > native-files-list

        zip natives-linux -@ < native-files-list

        '
    - continue-on-error: true
      name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: natives-linux.zip
        path: natives-linux.zip
  natives-macos:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: '17'
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    - continue-on-error: true
      name: Build macOS natives
      run: '# See https://github.com/actions/virtual-environments/issues/2557

        sudo mv /Library/Developer/CommandLineTools/SDKs/* /tmp

        sudo mv /Applications/Xcode.app /Applications/Xcode.app.bak

        sudo mv /Applications/Xcode_14.3.1.app /Applications/Xcode.app

        sudo xcode-select -switch /Applications/Xcode.app

        /usr/bin/xcodebuild -version

        ./gradlew jniGen jnigenBuildMacOsX64 jnigenBuildMacOsXARM64

        '
    - continue-on-error: true
      name: Pack artifacts
      run: 'find .  -name "*.a" -o -name "*.dll" -o -name "*.dylib" -o -name "*.so"
        | grep "libs" > native-files-list

        zip natives-macos -@ < native-files-list

        '
    - continue-on-error: true
      name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: natives-macos.zip
        path: natives-macos.zip
  natives-windows:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: '17'
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    - continue-on-error: true
      name: Install cross-compilation toolchains
      run: 'sudo apt update

        sudo apt install -y --force-yes mingw-w64 lib32z1

        '
    - continue-on-error: true
      name: Build Windows natives
      run: './gradlew jniGen jnigenBuildWindows64 jnigenBuildWindows

        '
    - continue-on-error: true
      name: Pack artifacts
      run: 'find .  -name "*.a" -o -name "*.dll" -o -name "*.dylib" -o -name "*.so"
        | grep "libs" > native-files-list

        zip natives-windows -@ < native-files-list

        '
    - continue-on-error: true
      name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: natives-windows.zip
        path: natives-windows.zip
  pack-natives:
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_EC2_METADATA_DISABLED: true
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    needs:
    - natives-macos
    - natives-linux
    - natives-windows
    - natives-ios
    - natives-android
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: '17'
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    - continue-on-error: true
      name: Download natives-ios artifact
      uses: actions/download-artifact@v2
      with:
        name: natives-ios.zip
    - continue-on-error: true
      name: Download natives-macos artifact
      uses: actions/download-artifact@v2
      with:
        name: natives-macos.zip
    - continue-on-error: true
      name: Download natives-linux artifact
      uses: actions/download-artifact@v2
      with:
        name: natives-linux.zip
    - continue-on-error: true
      name: Download natives-windows artifact
      uses: actions/download-artifact@v2
      with:
        name: natives-windows.zip
    - continue-on-error: true
      name: Download natives-android artifact
      uses: actions/download-artifact@v2
      with:
        name: natives-android.zip
    - continue-on-error: true
      name: Unpack natives
      run: 'unzip -o natives-ios.zip

        unzip -o natives-macos.zip

        unzip -o natives-linux.zip

        unzip -o natives-windows.zip

        unzip -o natives-android.zip

        '
    - continue-on-error: true
      name: Pack desktop natives
      run: './gradlew jniGen

        ant -f gdx/jni/build.xml pack-natives

        ant -f extensions/gdx-box2d/gdx-box2d/jni/build.xml pack-natives

        ant -f extensions/gdx-freetype/jni/build.xml pack-natives

        ant -f extensions/gdx-bullet/jni/build.xml pack-natives

        '
    - continue-on-error: true
      name: Pack natives
      run: 'find .  -name "*.a" -o -name "*.dll" -o -name "*.dylib" -o -name "*.so"
        -o -name "*-natives.jar" -o -name "*.xcframework" | grep "libs" > native-files-list

        zip -r natives -@ < native-files-list

        '
    - continue-on-error: true
      name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: natives.zip
        path: natives.zip
    - continue-on-error: true
      if: env.AWS_ACCESS_KEY_ID != null
      name: Upload artifacts to S3
      run: 'aws s3 cp natives.zip s3://libgdx-nightlies/libgdx-nightlies/natives.zip

        '
  publish:
    env:
      ORG_GRADLE_PROJECT_MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
      ORG_GRADLE_PROJECT_MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
    needs: pack-natives
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: '17'
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    - continue-on-error: true
      name: Download natives artifact
      uses: actions/download-artifact@v2
      with:
        name: natives.zip
    - continue-on-error: true
      name: Unpack natives
      run: 'unzip -o natives.zip

        '
    - continue-on-error: true
      name: Fetch external natives
      run: './gradlew fetchExternalNatives

        '
    - continue-on-error: true
      if: github.event_name == 'push' && github.ref == 'refs/heads/master' && github.repository_owner
        == 'libgdx'
      name: Snapshot build deploy
      run: './gradlew build publish

        '
    - continue-on-error: true
      id: import_gpg
      if: github.event_name == 'release' && github.repository_owner == 'libgdx'
      name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@1c6a9e9d3594f2d743f1b1dd7669ab0dfdffa922
      with:
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASSPHRASE }}
    - continue-on-error: true
      if: github.event_name == 'release' && github.repository_owner == 'libgdx'
      name: Release build deploy
      run: ./gradlew build publish -PRELEASE -Psigning.gnupg.keyId=${{ secrets.GPG_KEYID
        }} -Psigning.gnupg.passphrase=${{ secrets.GPG_PASSPHRASE }} -Psigning.gnupg.keyName=${{
        secrets.GPG_KEYID }}
name: Build and Publish
on:
  repository_dispatch:
    types: trigger-ga___build-publish.yml
